version: "3.8"
services:
  backend:
    build:
      context: ./back/E-Commerce
      dockerfile: dockerfile
    ports:
      - "5236:80"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    networks:
      - ecommerce-net
    volumes:
      - ./back/E-Commerce/Uploads:/app/Uploads
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
  frontend:
    build:
      context: ./front
      target: build
    ports:
      - "5173:5173"
    volumes:
      - ./front:/app
      - /app/node_modules
    environment:
      - CHOKIDAR_USEPOLLING=true
    command: npm run dev -- --host
    networks:
      - ecommerce-net
    depends_on:
      - backend
  db:
    container_name: sql_server2019
    build:
      context: .
      dockerfile: sql.dockerfile
    environment:
      - "ACCEPT_EULA=Y"
      - "SA_PASSWORD=Admin123@"
      - "MSSQL_PID=Developer"
      - "MSSQL_AGENT_ENABLED=true"
      - "MSSQL_TCP_PORT=1433"
    command: /opt/mssql/bin/sqlservr
    ports:
      - "1433:1433"
    volumes:
      - mssql-data:/var/opt/mssql
      - ./sql-tools:/sql-tools
    networks:
      - ecommerce-net
    healthcheck:
      test: /opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P "$$SA_PASSWORD" -Q "SELECT 1" || exit 1
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s
    restart: unless-stopped
networks:
  ecommerce-net:
    driver: bridge
volumes:
  mssql-data: